{"version":3,"sources":["../../src/providers/ble/consts.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/ble/ble.ts","../../src/providers/settings/settings.ts","../../src/app/app.component.ts","../../src/providers/providers.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Created by juergen on 9/27/17.\n */\n\n\nexport const UART_SERVICE = 0x1815;\nexport const UART_SERVICE_STR = \"1815\";\nexport const UART_TXRX = 0x2a5e;\nexport const UART_TXRX_STR = \"2A5E\";\nexport const UART_PASSWORD = 0xffff;\nexport const UART_PASSWORD_STR = \"ffff\";\nexport const UART_CONFIG = 0x2a5f;\nexport const UART_CONFIG_STR = \"2a5f\";\n\n\n\nexport const readGroupCmd = new Uint8Array([ 0xef, 0x01, 0x77 ]);\n\n// set baudrate command\nexport function setBaudCmd( baud: number ) {\n    return new Uint8Array([0x56, baud, 0, 0xf0, 0xaa]);\n}\n\n// set password command\nexport function setPasswordCmd( pwd: number ) {\n    return new Uint8Array([0x56, 0, 0, 0, pwd, 0x0f, 0xaa]);\n}\n\n// set group command\nexport function setGroupCmd( grp: number ) {\n    return new Uint8Array([0x56, 0, 0, 0, grp, 0x0f, 0xaa]);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/ble/consts.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 128;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 128\n// module chunks = 5","var map = {\n\t\"../pages/about/about.module\": [\n\t\t367,\n\t\t4\n\t],\n\t\"../pages/device/device.module\": [\n\t\t368,\n\t\t1\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t369,\n\t\t3\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t370,\n\t\t2\n\t],\n\t\"../pages/terminal/terminal.module\": [\n\t\t371,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 170;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 170\n// module chunks = 5","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule, Storage } from '@ionic/storage';\n\nimport { BLE } from \"@ionic-native/ble\";\n\nimport { Ble } from '../providers/providers';\nimport { Settings } from '../providers/providers';\nimport { MyApp } from './app.component';\n\nimport { TerminalPage } from '../pages/terminal/terminal';\nimport { DevicePage } from '../pages/device/device';\n\n\nexport function defaultSettings( storage: Storage ) {\n    /**\n     * The Settings provider takes a set of default settings for your app.\n     *\n     * You can add new settings options at any time. Once the settings are saved,\n     * these values will not overwrite the saved values (this can be done manually if desired).\n     */\n    console.log( \"default settings\");\n    return new Settings( storage, {\n        baudid: 3,\n        password: \"1234\",\n        group: 0,\n    });\n}\n\n@NgModule({\n    declarations: [\n        MyApp,\n    ],\n    imports: [\n        BrowserModule,\n        IonicModule.forRoot(MyApp),\n        // defaults to indexdb driver\n        IonicStorageModule.forRoot()\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n    ],\n    providers: [\n        BLE,\n        StatusBar,\n        SplashScreen,\n        { provide: Settings, useFactory: defaultSettings, deps: [Storage] },\n        // Keep this to enable Ionic's runtime error handling during development\n        { provide: ErrorHandler, useClass: IonicErrorHandler },\n        Ble\n    ],\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\nimport { Platform } from 'ionic-angular';\n\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/expand';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/first';\nimport 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/publishReplay';\nimport 'rxjs/add/operator/reduce';\nimport 'rxjs/add/operator/publish';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeWhile';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/share';\n\nimport 'rxjs/add/observable/concat';\nimport 'rxjs/add/observable/defer';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/timer';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TextEncoder } from 'text-encoding';\n\n// native Bluetooth\nimport { BLE } from '@ionic-native/ble';\n\n// service and characteristics numbers\nimport { UART_SERVICE, UART_TXRX, UART_PASSWORD, UART_CONFIG } from './consts';\n// service and characteristics numbers (native)\nimport { UART_SERVICE_STR, UART_TXRX_STR, UART_PASSWORD_STR, UART_CONFIG_STR } from '../../providers/ble/consts';\n\n// callback function type definition of read events and notify observables\ntype charReadCallback = ( event: any ) => void;\ntype getObservableFromNotify = ( Observable ) => void;\n\n// module augmentation, adding an interface we can implement\ndeclare module 'rxjs/Observable' {\n    interface Observable<T> {\n        doOnSubscribe(onSubscribe: () => void): this;\n    }\n}\n\n\n/*\n  Provider for Web Bluetooth\n */\n@Injectable()\nexport class Ble {\n\n    deviceName:         string;\n\n    ///////////////   W E B   B L U E T O O T H\n\n    gatt:               BluetoothRemoteGATTServer;\n\n    /** define your Characteristics here **/\n    // write and notify char\n    public uartChar: BluetoothRemoteGATTCharacteristic;\n    // write only char\n    public passwordChar: BluetoothRemoteGATTCharacteristic;\n    // read and write char\n    public configChar: BluetoothRemoteGATTCharacteristic;\n\n    // we need synchronized writing not to overload WebBluetooth\n    writable$:          Observable< boolean >;\n    private writableSubject = new BehaviorSubject<boolean>(false);\n\n    private isCordova:boolean;\n\n    constructor(\n        private platform: Platform,\n        private ble: BLE,\n    ) {\n        this.isCordova = this.platform.is(\"cordova\");\n\n        if (!this.isCordova) {\n            console.log('Hello Web BLE Provider');\n            this.writable$ = this.writableSubject.asObservable();\n        }\n    }\n\n\n    // connect gets call back functions for READ and NOTIFY chars used\n\n    async connect( gotConfig: charReadCallback, getUartDataNote: getObservableFromNotify ) {\n        // pops up device select window\n        const device = await navigator.bluetooth.requestDevice({\n            filters: [\n                { services: [ UART_SERVICE ]},\n                { namePrefix: \"AIR\" },\n            ],\n            optionalServices: [\"battery_service\"],\n        });\n\n        this.gatt = await device.gatt.connect();\n        this.deviceName = this.gatt.device.name;\n        console.log( \"connected to \" + this.deviceName );\n\n        /*      // listing all services available, for debugging\n        try {\n            console.log('Getting Services...');\n            const services = await this.gatt.getPrimaryServices();\n            for (const service of services) {\n                console.log('> Service: ' + service.uuid);\n                const characteristics = await service.getCharacteristics();\n\n                characteristics.forEach(characteristic => {\n                    console.log('>> Characteristic: ' + characteristic.uuid + ' ' +\n                    this.getSupportedProperties(characteristic));\n                });\n            }\n\n         } catch( error ) {\n            console.log('getServices error ' + error);\n         }\n         */\n\n        // get the main service\n        const uartService = await this.gatt.getPrimaryService( UART_SERVICE );\n\n        // Password, write only\n        this.passwordChar = await uartService.getCharacteristic( UART_PASSWORD );\n        // config, read and write\n        this.configChar = await uartService.getCharacteristic( UART_CONFIG );\n        // register an event handler for config reads\n        this.configChar.addEventListener( 'characteristicvaluechanged', gotConfig );\n\n        console.log(\"got all uart chars\");\n\n        // observable\n        //this.uartData = (await observableCharacteristic( this.uartChar ))\n        //    .map( parseUart );\n\n        // UART packets write and notify\n        this.uartChar = await uartService.getCharacteristic( UART_TXRX );\n        // register notify events and turn into observable\n\n        // implement operator doOnSubscribe on the event observable\n        Observable.prototype.doOnSubscribe = function(onSubscribe) {\n            let source = this;\n            return Observable.defer(() => {\n                onSubscribe();\n                return source;\n            });\n        };\n\n        // return the Observable for the notify char, with startNotify on first subscribe\n        getUartDataNote( Observable.fromEvent( this.uartChar, 'characteristicvaluechanged' )\n             .doOnSubscribe(() => {\n                 console.log('starting note');\n                 this.uartChar.startNotifications();\n             })\n            .map( value => String.fromCharCode.apply( null, new Uint8Array( this.uartChar.value.buffer )))\n            .takeUntil( Observable.fromEvent( this.gatt.device, 'gattserverdisconnected' ))\n            .finally(() => {\n                console.log( 'stream disconnected ');\n                // not necessary: return this.uartChar.stopNotifications()\n            })\n            .share()\n        );\n\n\n        /*\n         const chars = this.uartData.concatMap(chunk => chunk.split(''));\n         this.lines$ = chars.scan(( acc, curr ) => acc[acc.length - 1] === '\\n' ? curr : acc + curr)\n         .filter(item => item.indexOf('\\n') >= 0);\n         console.log( 'got '+this.lines$ )\n         */\n\n        // now allow write to UART\n        await setTimeout(() => this.writableSubject.next( true ), 0);\n\n    }\n\n\n    public disconnect() {\n        console.log(\"calling disconnect on gatt\");\n        try {\n            this.gatt.disconnect();\n        } catch (e) {}\n    }\n\n    public disconnectNative( peripheral: any ){\n        try{\n            this.ble.disconnect( peripheral );\n        } catch (e) {}\n    }\n\n    public name(): string {\n        return this.deviceName;\n    }\n\n    /* unused functions\n\n     private getSupportedProperties( characteristic ) {\n        let supportedProperties = [];\n        for (const p in characteristic.properties) {\n            if (characteristic.properties[p] === true) {\n                supportedProperties.push(p.toUpperCase());\n            }\n        }\n        return '[' + supportedProperties.join(', ') + ']';\n     }\n\n     // another way to do that:\n     this.sensData = (await observableCharacteristic( SENSOR ))\n         .map( parseSensor );\n\n     async observableCharacteristic( char: BluetoothRemoteGATTCharacteristic ) {\n        await char.startNotifications();\n        const disconnected = Observable.fromEvent( char.service!.device, 'gattserverdisconnected');\n        return Observable.fromEvent( char, 'characteristicvaluechanged' )\n            .takeUntil( disconnected )\n            .map((event: Event) => ( event.target as BluetoothRemoteGATTCharacteristic ).value as DataView );\n     }\n\n     */\n\n\n\n\n    /** characteristic write functions **/\n\n    // only for Web Bluetooth, see device.ts for native\n    public async password( pw: string ){\n        console.log( \"writing pwd \"+ pw );\n        await this.passwordChar.writeValue( new TextEncoder('utf-8').encode(`${pw}`));\n    }\n\n\n\n    private async writeConfigChar( raw: Uint8Array, peripheral: any ){\n        try {\n            if( peripheral !== undefined ) {\n                // Native BLE\n                await this.ble.write( peripheral.id, UART_SERVICE_STR, UART_CONFIG_STR, raw.buffer );\n            } else {\n                // Web Bluetooth\n                await this.configChar.writeValue( raw );\n            }\n\n        } catch( e ) {\n            console.log( \"setconfig failed \" + e);\n        }\n    }\n\n    public async setBaudConfig( baudid: string, peripheral?: any ){\n        let raw = new Uint8Array( 2 );\n        raw[0] = 0x01; // baud command\n        raw[1] = +baudid; // convert to number\n\n        console.log( \"peripheral=\"+JSON.stringify( peripheral ));\n        await this.writeConfigChar( raw, peripheral );\n\n    }\n\n\n\n    public async setConfig( group: number, peripheral?: any ){\n        let raw = new Uint8Array( 3 );\n        raw[0] = 32; // group command\n        raw[1] = group & 0xFF; // lower bytes\n        raw[2] = ( group >> 8 ); // upper byte\n\n        await this.writeConfigChar( raw, peripheral );\n    }\n\n\n\n    public async newPassword( pw: string, peripheral?: any ){\n\n        const length = (pw as string).length;\n\n        let pwdata = new Uint8Array( length+1 );\n        pwdata[0] = length;\n        for( let i=0; i<length; i++){\n            pwdata[i+1] = pw.charCodeAt(i);\n        }\n        await this.writeConfigChar( pwdata, peripheral );\n    }\n\n\n    // write to char in chunks as well as step by step\n    // using native Bluetooth when peripheral as parameter isn't there\n    public sendText( text: string, peripheral?: any ){\n\n        //console.log(\"sending \"+text);\n        this.writableSubject.next(true);\n\n        const bytes = text.split('').map(c => c.charCodeAt(0));\n        const chunks = [];\n\n        while( bytes.length > 0 ) {\n            chunks.push(new Uint8Array(bytes.splice(0, 20)));\n        }\n\n        const result = Observable.zip(\n                Observable.from( chunks ),\n                this.writableSubject.filter(value => value)\n            )\n            .mergeMap(([ chunk, writeable ]) => {\n                //console.log(\"writing: \"+ chunk);\n                this.writableSubject.next(false);\n\n                if( peripheral !== undefined ) {\n                    // Native BLE this.ble.writeWithoutResponse is a promise\n                    return Observable.fromPromise(\n                        this.ble.writeWithoutResponse( peripheral.id, UART_SERVICE_STR, UART_TXRX_STR, chunk.buffer )\n                    )\n                } else {\n                    // Web Bluetooth\n                    return Observable.from(this.uartChar.writeValue(chunk));\n                }\n            })\n\n            // timeout absolutely necessary because otherwise writeValue will fail when called too quickly\n            .map(() => setTimeout(() => this.writableSubject.next( true ), 10))\n            // make this into a connectable Observable\n            .publish();\n\n        // connect to the Observable and get the result\n        result.connect();\n        return result;\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/ble/ble.ts","\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n    private SETTINGS_KEY:string = '_sppgatt';\n\n    settings: any;\n\n    _defaults: any;\n    _readyPromise: Promise<any>;\n\n    constructor( public storage: Storage,\n                 defaults: any\n    ) {\n        this._defaults = defaults;\n    }\n\n    load() {\n        return this.storage.get(this.SETTINGS_KEY).then((value) => {\n            if (value) {\n                this.settings = value;\n                return this._mergeDefaults(this._defaults);\n            } else {\n                return this.setAll(this._defaults).then((val) => {\n                    this.settings = val;\n                })\n            }\n        });\n    }\n\n    _mergeDefaults(defaults:any) {\n        for (let k in defaults) {\n            if (!(k in this.settings)) {\n                this.settings[k] = defaults[k];\n            }\n        }\n        return this.setAll(this.settings);\n    }\n\n    merge(settings:any) {\n        for (let k in settings) {\n            this.settings[k] = settings[k];\n        }\n        return this.save();\n    }\n\n    setValue(key:string, value:any) {\n        this.settings[key] = value;\n        return this.storage.set(this.SETTINGS_KEY, this.settings);\n    }\n\n    setAll(value:any) {\n        return this.storage.set(this.SETTINGS_KEY, value);\n    }\n\n    getValue(key:string) {\n        return this.storage.get(this.SETTINGS_KEY)\n            .then(settings => {\n                return settings[key];\n            });\n    }\n\n    save() {\n        return this.setAll(this.settings);\n    }\n\n    get allSettings() {\n        return this.settings;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { Settings } from '../providers/providers';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n\n    // must be a string\n    rootPage = 'TabsPage';\n\n    constructor(\n        private platform: Platform,\n        private statusBar: StatusBar,\n        settings: Settings,\n        private splashScreen: SplashScreen\n    ) {\n    }\n\n    ionViewDidLoad() {\n        this.platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            if ( this.platform.is(\"cordova\")) {\n                this.statusBar.styleDefault();\n                this.splashScreen.hide();\n            }\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/**\n * Created by juergen on 9/26/17.\n */\nimport { Ble } from './ble/ble';\nimport { Settings } from './settings/settings';\n\nexport {\n    Ble,\n    Settings,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts"],"sourceRoot":""}