{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingsPage } from './settings';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingsPage),\n  ],\n  exports: [\n    SettingsPage\n  ]\n})\nexport class SettingsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component, ViewChild, NgZone } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { IonicPage, Tabs, NavController, NavParams, Events } from 'ionic-angular';\n\nimport { Settings } from '../../providers/providers';\n\n/**\n * The Settings page is a simple form that syncs with a Settings provider\n * to enable the user to customize settings for the app.\n *\n */\n\n@IonicPage()\n@Component({\n    selector: 'page-settings',\n    templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n\n    @ViewChild('myTabs') tabRef:Tabs;\n\n    showPasswordText = false;\n    connected = false;\n\n    settingsForm: FormGroup;\n\n    private baudid;\n    // map ID to actual bps\n    private baudlist = [\n        { id: 1, speed: '2400' },\n        { id: 3, speed: '9600' },\n        { id: 4, speed: '19200' },\n        { id: 5, speed: '38400' },\n        { id: 6, speed: '57600' },\n        { id: 8, speed: '115200' }\n    ];\n\n    // Our local settings object\n    private uartsettings: any; // = { baudid: 3, password: \"1234\" };\n\n    settingsReady = false;\n\n    profileSettings = {\n        page: 'profile',\n        pageTitleKey: 'SETTINGS_PAGE_PROFILE'\n    };\n\n    page: string = 'main';\n    pageTitleKey: string = 'SETTINGS_TITLE';\n    pageTitle: string;\n\n    constructor(public navCtrl:NavController,\n                public settings: Settings,\n                public navp: NavParams,\n                private zone: NgZone,\n                public formBuilder: FormBuilder,\n                public events: Events) {\n        console.log(\"settings page \"+JSON.stringify( settings ));\n    }\n\n\n\n    _buildForm() {\n\n        console.log(\"buildForm\");\n\n        this.settingsForm = this.formBuilder.group({\n            baudid: [ this.uartsettings.baudid ],\n            password: [ this.uartsettings.password, Validators.compose([ Validators.maxLength(20), Validators.required ])],\n            group: [ this.uartsettings.group ],\n        });\n\n        // Watch the form for changes, and save them immediately\n        this.settingsForm.valueChanges.subscribe((v) => {\n            this.settings.merge( this.settingsForm.value );\n        });\n\n    }\n\n\n    ionViewDidLoad() {\n        console.log('ionViewDidLoad SettingsPage');\n        // Build an empty form for the template to render\n        this.settingsForm = this.formBuilder.group({});\n    }\n\n    ionViewWillEnter() {\n        console.log(\"ionViewWillEnter\");\n        // Build an empty form for the template to render\n        this.settingsForm = this.formBuilder.group({});\n\n        //this.page = this.navParams.get('page') || this.page;\n        //this.pageTitleKey = this.navParams.get('pageTitleKey') || this.pageTitleKey;\n\n        this.settings.load().then(() => {\n            this.settingsReady = true;\n            this.uartsettings = this.settings.allSettings;\n\n            this._buildForm();\n        });\n    }\n\n    ngOnChanges() {\n        console.log('Ng All Changes');\n    }\n\n\n\n    showPassword( input: any ): any {\n        this.zone.run(() => {\n            this.showPasswordText = this.showPasswordText === true ? false : true;\n        });\n    }\n\n    save() {\n\n        //console.log( \"form \"+ JSON.stringify( this.settingsForm.value ));\n        this.uartsettings.baudid = +this.settingsForm.value.baudid;\n        // make it into a number with the plus sign\n        this.uartsettings.password = this.settingsForm.value.password;\n        // keep as string\n        this.uartsettings.group = this.settingsForm.value.group;\n\n        //saveSettings( this.storage, this.uartsettings );\n\n\n        // move to the main page 1\n        this.navCtrl.parent.select( 0, {\n            uartsettings: this.uartsettings\n        } );\n\n        // send event to the terminal page so it can change the physical settings\n        this.events.publish( \"settings:changed\", this.uartsettings );\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}